###------------------------------------------------------------------------------------------------------------------------------------
### Config_Schema_Migration_Schema_Standards.yml
###------------------------------------------------------------------------------------------------------------------------------------
# This config yaml file is a ready-made sample of the steps for: Authentication + Local Cat to DDL + Schema Standards (schema type-CDL) for your reference and convenience. You can copy and customize the configuration.
# Each line represents a property (key-value pair). 
#   The property key (left side of colon) is a fixed keyword and should not be altered. 
#   The property value (right side of colon) is for user input.    
#   The alignment or spacing for the property key and value should not be changed. It may result in an unexpected error. The YAML file only works with proper alignment.
#   For property values with multiple lines, specify the pipe | character after the property key.  On the following line, indent the lines with values.
# Refer to the sample config file, 'Config_Schema_Standards_ALL_Schema_Types.yml', for the property key help text.
###------------------------------------------------------------------------------------------------------------------------------------

version: 3.0.0

authentication:
  debugMode: true
  hostName: mvsdb2b.bmc.com          #specify the mainframe host name or IP address
  port: 32208
  authenticationType: userBased
  user: USER_ID_AUTH
  password: USER_PASS_AUTH
  certificatePath: CERT_PATH_AUTH
  certificatePassword: CERT_PASS_AUTH
  symbolicPropertiesFilePath: symbol_DEJM_BUILD.properties
  debugModeAllSteps: false
  executionIdentifier: PipelineName=PIPELINENAME_VALUE,RunNumber=RUNNUMBER_VALUE,RunBy=RUNBY_VALUE,RunMode=RUNMODE_VALUE

localCatToDDL:
  - stepName: localCat_to_DDL
    runStepAlways: false
    debugMode: true
    generateJclOnly: false
    ssid: DEJM             #specify Db2 subsystem ID
    workIdOwner: MVSAMA     #specify Owner (part 1) for WorkID
    workIdName: JOB_ID
    addCommentToWorkId: false
    workIdCommentText:
    compare2DdlPds: $[ddlpds](AA020719)
    useOutboundMigrateProfileBeforeComparison: false
    outboundMigrateProfileBeforeComparison:
    addCommentToCompare: false
    compareCommentText:
    useOutboundMigrateProfileAfterComparison: false
    outboundMigrateProfileAfterComparison:
    cdlPds: $[cdlpds](JOB_ID)
    useInboundMigrateProfile: false
    inboundMigrateProfile:
    worklistPds: $[wlpds](JOB_ID)
    impactReportPds: $[irpds](JOB_ID)
    executionJclPds: $[execpds](JOB_ID)
    preExecutionBaselineType: none
    preExecutionBaselineProfileName:
    preExecutionBaselineName:
    generateCdlRollbackSchemaChanges: false
    cdlPdsRollback:
    createPostExecutionBaseline: false
    postExecutionBaselineProfileName:
    postExecutionBaselineName:
    jobCard: |
      //DEVOPS JOB ($[acctno]),'COMPARE',
      // CLASS=Q,MSGLEVEL=(1,1),NOTIFY=&SYSUID
    additionalCompareInputKeywords: NODEFINE
    additionalImportInputKeywords:
    additionalAnalysisInputKeywords:
    additionalJclGenerationInputKeywords:
    jcl: |
      ${jobCard}
      //*
      // JCLLIB ORDER=($[proclib])
      //*
      //JOBLIB DD DSN=$[joblib1],DISP=SHR
      //       DD DSN=$[joblib2],DISP=SHR
      //       DD DSN=$[dsnexit],DISP=SHR
      //       DD DSN=$[dsnload],DISP=SHR
      //***************************************************
      // SET ACMDOPT=$[dopts]
      // SET RTEHLQ=$[rtehlq]
      // SET USRHLQ=$[usrhlq]
      //***************************************************
      // SET DDLFILE=${compare2DdlPds}
      // SET CDLFILE=${cdlPds}
      // SET WORKLIST=${worklistPds}
      // SET EXECJCL=${executionJclPds}
      // SET IMPRPT=${impactReportPds}
      //*
      // SET POFFILE=$[pofdsn]
      //*----------------------------------------------------
      //* BMC CHANGE MANAGER COMPARE
      //*----------------------------------------------------
      ${Compare Input Stream}
      //*----------------------------------------------------
      //* BMC CHANGE MANAGER IMPORT
      //*----------------------------------------------------
      //IMPORT EXEC AMAPROCI,
      // COND=${BMC_COMPARE_COND_CODE}
      //IMPORT.IMPORTIN DD DISP=SHR,
      // DSN=&CDLFILE
      ${Import Input Stream}
      //*----------------------------------------------------
      //* BMC CHANGE MANAGER ANALYSIS
      //*----------------------------------------------------
      //ANALYSIS EXEC AMAPROCA,
      // COND=${BMC_COMPARE_COND_CODE}
      ${Analysis Input Stream}
      //*----------------------------------------------------
      //* BMC JCL GENERATION
      //*----------------------------------------------------
      //JCLGEN EXEC AMAPROCJ,
      // COND=${BMC_COMPARE_COND_CODE}
      ${JCL Generation Input Stream}
    acceptableReturnCode: 0004
    maxJobWaitTime: 2

schemaStandards:
  - stepName: schema_standards_cdl
    debugMode: true
    generateJclOnly: false
    ssid: DEJM             #specify Db2 subsystem ID
    ruleSetName: $BMC SAMPLE RULE SET
    violationResponse: FAIL
    schemaType: CDL
    inputSchemaSource: $[cdlpds](JOB_ID)
    useOutboundMigrateProfileAfterRead: false
    outboundMigrateProfileAfterRead:
    jobCard: |
      //AMASTDS JOB ($[acctno]),'SCHEMA STANDARDS',
      //  CLASS=A,MSGLEVEL=(1,1)
      //*
    schemaStandardsInputStream: |
      //SCHEMAS.AMAIN  DD DISP=SHR,
      //           DSN=${inputSchemaSource}
      //SCHEMAS.ALUIN  DD *,SYMBOLS=JCLONLY
        SSID &SSID
        SOURCETYPE CDL
        RULESET (&RULESET)
        LOGMODE &LOGMODE
        VTIBUCKETSIZE &VTIBSZ
    debugInputStream: |
      //**********************************************************************
      //* The DDs below are used for debugging of Schema Standards
      //**********************************************************************
      //* $XMLOUT$ contains the objects that will be processed
      //*SCHEMAS.$XMLOUT$ DD SYSOUT=*
      //* $RULETRE contains the rules that will run against the objects
      //*SCHEMAS.$RULETRE DD SYSOUT=*
      //* $VTIRULE contains the VTI rules that were tested
      //*SCHEMAS.$VTIRULE DD SYSOUT=*
      //**********************************************************************
    jcl: |
      ${jobCard}
      //*
      //       JCLLIB ORDER=($[proclib])
      //*
      //JOBLIB  DD  DISP=SHR,
      //            DSN=$[joblib1]
      //        DD  DISP=SHR,
      //            DSN=$[joblib2]
      //        DD  DISP=SHR,
      //            DSN=$[dsnexit]
      //        DD  DISP=SHR,
      //            DSN=$[dsnload]
      //*
      // EXPORT SYMLIST=(*)
      //*
      // SET SSID=${ssid}
      // SET GUDPLAN=$[gudplan]
      // SET RULESET='${ruleSetName}'
      // SET LOGMODE=${violationResponse}
      // SET VTIBSZ=20
      //*******************************************************
      //SCHSTDS  EXEC AMAPROCS
      ${schemaStandardsInputStream}
      ${debugInputStream}
    maxJobWaitTime:  2
