#------------------------------------------------#
# This is complete workflow for end to end jobs  ##
#------------------------------------------------#
name: AA-GIT-FT-workflow

on: workflow_dispatch
#Added comment delete later
# on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#  workflow_dispatch:

jobs:
  build:
    runs-on: dev-aa
    env:
     jobid: AA240423
    container: 
      image: pun-harborpd-01.bmc.com/bmc_qa/amidevopsdb2/devopsuc:13.01.00.0002.8-SSL
      # UID which can be used uid=1009(MVSYXJ)
      options: -u root
#       options: -u 1008
    steps:    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository
        uses: actions/checkout@v3
        
#       - name: Upload certificate
#         uses: actions/upload-artifact@v2
#         with:
#           name: client-certificate
#           path: certs/Afrozp12.p12
          
#       - name: Download certificate
#         uses: actions/download-artifact@v2
#         with:
#           name: client-certificate
#           path: certs1
        
      # Runs a initialization command using the runners shell
      - name: Initialization
        run: |
          echo Initialization started
          echo ${{ github.workspace }}
          echo $GITHUB_WORKSPACE
          echo "Replacing User Id and Password in the config.yaml file"
          sed -i "s/USER_ID_AUTH/${{vars.USER_ID }}/" config.yaml 
          sed -i "s/USER_PASS_AUTH/${{secrets.PASSWORD }}/" config.yaml
          #sed -i "s|CERT_PATH_AUTH|$GITHUB_WORKSPACE/Afrozp12.p12|" config.yaml
          #sed -i "s|CERT_PATH_AUTH|$GITHUB_WORKSPACE/certs1/Afrozp12.p12|" config.yaml
          #sed -i "s/CERT_PASS_AUTH/${{secrets.CERT_PASS }}/" config.yaml
          sed -i "s/JOB_ID/${{env.jobid }}/" config.yaml
          sed -i "s/DDL_FILE_FT_UPLOAD/${{vars.DDL_FILE }}/" config.yaml
          sed -i "s/PIPELINENAME_VALUE/${{github.workflow}}/" config.yaml
          sed -i "s/RUNNUMBER_VALUE/${{github.run_id}}/" config.yaml
          sed -i "s/RUNBY_VALUE/${{github.actor}}/" config.yaml
          sed -i "s/RUNMODE_VALUE/${{github.event_name}}/" config.yaml         
          echo "-----   Updated config.yaml file -----"
          cat config.yaml
      # Sample display step
      - name: Run a one-line script
        run: echo Hello, world!
      # SM - Authentication Step
      - name: Authentication 
        run:
          step authentication
          
      # SM - Authentication Step
      - name: File Transmission Upload 
        run:
          step local_to_mainframe
          
      # Execute application step - localCatToDDL (localCat_to_DDL)
      - name: Schema Migration-Local Cat to DDL 
        run:
          step localCat_to_DDL
          
      # Fetch the return code from output file output_local_cat_ddl.properties
      # and set in output variable to use it later
      - name: Return Code-Local Cat to DDL 
        run: |
          . $GITHUB_WORKSPACE/output_local_cat_ddl.properties  #read and fetch the return code from output file
          RetCod="$compareRC"                     #set the return code in output var
          echo "RetCod=${RetCod}" >> $GITHUB_ENV
          echo $GITHUB_ENV
          
      # Execute application step - outputTransmission (download_output)
      - name: Download Files - CDL/WL/EXECJCL/IR 
        run:
          step download_output
          
      ###
      # Execute application step - jclExecutionUsingPDSMember (jclExecutionPDS)  
      # Method-1: Using GitHub Actions based condition keyword- Run step only if condition is satisfied. 
      ###
      - name: Run JCL to Implement Schema Change
        if: ${{ success() && env.RetCod <= '0004' }}
        run: |
          echo $RetCod
          step jclExecutionPDS
