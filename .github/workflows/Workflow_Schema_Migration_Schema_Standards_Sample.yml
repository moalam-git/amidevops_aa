###------------------------------------------------------------------------------------------------------------------------------------
### Workflow_Schema_Migration_Schema_Standards_Sample.yml (for GitHub Actions)
###------------------------------------------------------------------------------------------------------------------------------------
# The sample workflow performs Authentication + Local Cat to DDL + Schema Standards (schema type-CDL) steps using application defined command step.
# The sample workflow script is defined to use various items like below:
#  a) References to variables added through GitHub Actions secrets and variables.
#  b) Use of Linux based sed command to replace input as variable name by variable definition from GitHub Actions secrets and variables.
#  c) Use of configuration file (Config_Schema_Migration_Schema_Standards.yml), that resides in directory (non-root folder).
#     Example of properties of authentication step is taken from config file "Config_Schema_Migration_Schema_Standards.yml", that is
#       maintained inside folders "GitHub/SAMPLE/MAA/configFiles":
#            step authentication GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
#  d) GitHub Actions based "if:" condition command is used.
###------------------------------------------------------------------------------------------------------------------------------------
name: Workflow_Schema_Migration_Schema_Standards_Sample   #name of the workflow

on:
  workflow_dispatch               #manual trigger of the workflow

jobs:
  Schema_Migration_Schema_Standards_CDL:           #name of the job
    runs-on: dev-aa #specify runner name
    container: 
      image: pun-harborpd-01.bmc.com/bmc_qa/amidevopsdb2/devopsuc:13.01.00.0003.7-SSL
      options: -u 1008           #specify uid of the user running the runner
      
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository
        uses: actions/checkout@v3
      
      # For certBased Authentication, uncomment the following task to unzip the specified client certificate
      # from repository into path specified with -d parameter (ex. /opt/secret)  
      # - name: unzip client certificate
      #   run: |
      #    unzip -P "${{secrets.zip_cert_pass}}" <clientCertificateName>.p12 -d /opt/secret
      
      # Perform various initialization functions using Linux based command sed
      - name: Initialization
        run: |
          echo "Replace variables defined in GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml file"
          # Linux command sed is used to replace the config file variables with GitHub Actions secrets and variables
          sed -i "s/USER_ID_AUTH/${{vars.user_id}}/" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          sed -i "s/USER_PASS_AUTH/${{secrets.user_pass}}/" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          # For certBased Authentication, uncomment the following 2 sed commands
          # sed -i "s|CERT_PATH_AUTH|/opt/secret/<clientCertificateName>.p12|" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          # sed -i "s/CERT_PASS_AUTH/${{secrets.cert_pass}}/" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          # Use syntax \<var name\> to find and replace the exact matching word
          sed -i "s/\<JOB_ID\>/${{vars.job_id}}/" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          # Use GitHub Actions environment variables to fetch workflow name, run number, run by and run mode of the executing workflow
          sed -i "s/PIPELINENAME_VALUE/${{github.workflow}}/" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          sed -i "s/RUNNUMBER_VALUE/${{github.run_id}}/" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          sed -i "s/RUNBY_VALUE/${{github.actor}}/" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          sed -i "s/RUNMODE_VALUE/${{github.event_name}}/" GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          echo "-----   GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml file is updated -----"
      
      # Execute application step - authentication
      - name: Authentication 
        run:
          step authentication GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml

      # Execute application step - localCatToDDL (localCat_to_DDL)
      - name: Schema Migration-Local Cat to DDL 
        run:
          step localCat_to_DDL GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
          
      # Fetch the return code from output file output_local_cat_ddl.properties
      # and set in output variable as environment variable to use in subsequent steps
      - name: Return Code-Local Cat to DDL 
        run: |
          . $GITHUB_WORKSPACE/output_local_cat_ddl.properties  #read and fetch the return code from output file
          echo "RetCod=$compareRC" >> "$GITHUB_ENV"            #set the return code as environment variable

      ###
      # Execute application step - schemaStandards (schema_standards_cdl)
      # Using GitHub Actions based if condition - Run step only if $compareRC condition is satisfied.
      ###
      - name: Schema Standards â€“ Analyze CDL
        if: ${{ success() && env.RetCod <= '0004' }}
        run:
          step schema_standards_cdl GitHub/SAMPLE/MAA/configFiles/Config_Schema_Migration_Schema_Standards.yml
